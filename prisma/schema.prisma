generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model CourseProgress {
  progressID            Int       @id @default(autoincrement())
  studentID             Int?
  courseID              Int?
  progressPercentage    Int?
  lastActivityTimestamp DateTime?
  courses               Courses?  @relation(fields: [courseID], references: [courseID], onDelete: NoAction, onUpdate: NoAction)
  students              Students? @relation(fields: [studentID], references: [studentID], onDelete: NoAction, onUpdate: NoAction)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Courses {
  courseID       Int              @id @default(autoincrement())
  courseName     String
  description    String?
  levelID        Int?
  courseProgress CourseProgress[]
  levels         Levels?          @relation(fields: [levelID], references: [levelID], onDelete: NoAction, onUpdate: NoAction)
  exams          Exams[]
  materials      Materials[]
  userActivities UserActivities[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model ExamQuestions {
  examQuestionID Int        @id @default(autoincrement())
  examID         Int?
  questionID     Int?
  questionOrder  Int?
  questions      Questions? @relation(fields: [questionID], references: [questionID], onDelete: NoAction, onUpdate: NoAction)
  exams          Exams?     @relation(fields: [examID], references: [examID], onDelete: NoAction, onUpdate: NoAction)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model ExamResults {
  examResultID   Int       @id @default(autoincrement())
  examID         Int?
  studentID      Int?
  score          Int?
  submissionTime DateTime?
  students       Students? @relation(fields: [studentID], references: [studentID], onDelete: NoAction, onUpdate: NoAction)
  exams          Exams?    @relation(fields: [examID], references: [examID], onDelete: NoAction, onUpdate: NoAction)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Exams {
  examID         Int              @id @default(autoincrement())
  teacherID      Int?
  title          String
  description    String?
  startTime      DateTime?
  endTime        DateTime?
  duration       Int?
  levelID        Int?
  courseID       Int?
  examQuestions  ExamQuestions[]
  examResults    ExamResults[]
  courses        Courses?         @relation(fields: [courseID], references: [courseID], onDelete: NoAction, onUpdate: NoAction)
  levels         Levels?          @relation(fields: [levelID], references: [levelID], onDelete: NoAction, onUpdate: NoAction)
  teachers       Teachers?        @relation(fields: [teacherID], references: [teacherID], onDelete: NoAction, onUpdate: NoAction)
  userActivities UserActivities[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model FillInTheBlankQuestions {
  fillInTheBlankQuestionID Int        @id @default(autoincrement())
  questionID               Int?
  correctAnswers           String?
  questions                Questions? @relation(fields: [questionID], references: [questionID], onDelete: NoAction, onUpdate: NoAction)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Levels {
  levelID     Int         @id @default(autoincrement())
  levelName   String
  description String?
  courses     Courses[]
  exams       Exams[]
  materials   Materials[]
  users       Users[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Materials {
  materialID      Int              @id @default(autoincrement())
  teacherID       Int?
  title           String
  description     String?
  fileURL         String?
  requiredLevelID Int?
  courseID        Int?
  courses         Courses?         @relation(fields: [courseID], references: [courseID], onDelete: NoAction, onUpdate: NoAction)
  levels          Levels?          @relation(fields: [requiredLevelID], references: [levelID], onDelete: NoAction, onUpdate: NoAction)
  teachers        Teachers?        @relation(fields: [teacherID], references: [teacherID], onDelete: NoAction, onUpdate: NoAction)
  userActivities  UserActivities[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Options {
  optionID   Int        @id @default(autoincrement())
  questionID Int?
  optionText String
  isCorrect  Boolean?
  questions  Questions? @relation(fields: [questionID], references: [questionID], onDelete: NoAction, onUpdate: NoAction)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model OrderQuestions {
  orderQuestionID Int        @id @default(autoincrement())
  questionID      Int?
  correctOrder    String?
  questions       Questions? @relation(fields: [questionID], references: [questionID], onDelete: NoAction, onUpdate: NoAction)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Questions {
  questionID              Int                       @id @default(autoincrement())
  teacherID               Int?
  questionText            String
  questionType            String
  examQuestions           ExamQuestions[]
  fillInTheBlankQuestions FillInTheBlankQuestions[]
  options                 Options[]
  orderQuestions          OrderQuestions[]
  teachers                Teachers?                 @relation(fields: [teacherID], references: [teacherID], onDelete: NoAction, onUpdate: NoAction)
  wordSearchQuestions     WordSearchQuestions[]
  yesNoQuestions          YesNoQuestions[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Students {
  studentID      Int              @id @default(autoincrement())
  userID         Int?             @unique(map: "sqlite_autoindex_Students_1")
  firstName      String
  lastName       String
  email          String?
  courseProgress CourseProgress[]
  examResults    ExamResults[]
  users          Users?           @relation(fields: [userID], references: [userID], onDelete: NoAction, onUpdate: NoAction)
  userActivities UserActivities[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Teachers {
  teacherID Int         @id @default(autoincrement())
  userID    Int?        @unique(map: "sqlite_autoindex_Teachers_1")
  firstName String
  lastName  String
  email     String?
  exams     Exams[]
  materials Materials[]
  questions Questions[]
  users     Users?      @relation(fields: [userID], references: [userID], onDelete: NoAction, onUpdate: NoAction)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model UserActivities {
  activityID Int        @id @default(autoincrement())
  userID     Int?
  studentID  Int?
  materialID Int?
  examID     Int?
  timestamp  DateTime?
  score      Int?
  courseID   Int?
  courses    Courses?   @relation(fields: [courseID], references: [courseID], onDelete: NoAction, onUpdate: NoAction)
  exams      Exams?     @relation(fields: [examID], references: [examID], onDelete: NoAction, onUpdate: NoAction)
  materials  Materials? @relation(fields: [materialID], references: [materialID], onDelete: NoAction, onUpdate: NoAction)
  students   Students?  @relation(fields: [studentID], references: [studentID], onDelete: NoAction, onUpdate: NoAction)
  users      Users?     @relation(fields: [userID], references: [userID], onDelete: NoAction, onUpdate: NoAction)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Users {
  userID         Int              @id @default(autoincrement())
  username       String
  password       String
  userType       String
  levelID        Int?
  students       Students?
  teachers       Teachers?
  userActivities UserActivities[]
  levels         Levels?          @relation(fields: [levelID], references: [levelID], onDelete: NoAction, onUpdate: NoAction)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model WordSearchQuestions {
  wordSearchQuestionID Int        @id @default(autoincrement())
  questionID           Int?
  wordList             String?
  questions            Questions? @relation(fields: [questionID], references: [questionID], onDelete: NoAction, onUpdate: NoAction)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model YesNoQuestions {
  yesNoQuestionID Int        @id @default(autoincrement())
  questionID      Int?
  correctAnswer   Boolean?
  questions       Questions? @relation(fields: [questionID], references: [questionID], onDelete: NoAction, onUpdate: NoAction)
}
